from .logger import logger as logger
from _typeshed import Incomplete

class Config:
    default_config: Incomplete
    config: Incomplete
    path: Incomplete
    cfg_file_name: Incomplete
    def __init__(self, default_config, path: str = ..., cfg_file_name: str = ...) -> None: ...
    def check(self, config: dict, default_config: dict) -> None: ...
    def create_default_config(self) -> None: ...
    def load(self) -> dict: ...
    def save(self) -> None: ...
    def update_config_value(self, key, value) -> None: ...
    def get_value(self, key) -> any: ...
    def get_config(self) -> dict: ...
    def __getitem__(self, key): ...
    def __setitem__(self, key, value) -> None: ...
    def __delitem__(self, key) -> None: ...
    def __len__(self) -> int: ...
    def __iter__(self): ...
    def __contains__(self, item) -> bool: ...
