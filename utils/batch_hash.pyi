from . import hash as hash
from _typeshed import Incomplete
from typing import Tuple

def md5(*datas: str | bytes, encoding: str = ..., decoding: Incomplete | None = ...) -> Tuple[str]: ...
def sha1(*datas: str | bytes, encoding: str = ..., decoding: Incomplete | None = ...) -> Tuple[str]: ...
def sha224(*datas: str | bytes, encoding: str = ..., decoding: Incomplete | None = ...) -> Tuple[str]: ...
def sha256(*datas: str | bytes, encoding: str = ..., decoding: Incomplete | None = ...) -> Tuple[str]: ...
def sha384(*datas: str | bytes, encoding: str = ..., decoding: Incomplete | None = ...) -> Tuple[str]: ...
def sha512(*datas: str | bytes, encoding: str = ..., decoding: Incomplete | None = ...) -> Tuple[str]: ...
def sha3_224(*datas: str | bytes, encoding: str = ..., decoding: Incomplete | None = ...) -> Tuple[str]: ...
def sha3_256(*datas: str | bytes, encoding: str = ..., decoding: Incomplete | None = ...) -> Tuple[str]: ...
def sha3_384(*datas: str | bytes, encoding: str = ..., decoding: Incomplete | None = ...) -> Tuple[str]: ...
def sha3_512(*datas: str | bytes, encoding: str = ..., decoding: Incomplete | None = ...) -> Tuple[str]: ...
def blake2b(*datas: str | bytes, encoding: str = ..., decoding: Incomplete | None = ...) -> Tuple[str]: ...
def blake2s(*datas: str | bytes, encoding: str = ..., decoding: Incomplete | None = ...) -> Tuple[str]: ...
def shake128(*datas: str | bytes, length: int = ..., encoding: str = ..., decoding: Incomplete | None = ...) -> Tuple[str]: ...
def shake256(*datas: str | bytes, length: int = ..., encoding: str = ..., decoding: Incomplete | None = ...) -> Tuple[str]: ...
