from _typeshed import Incomplete
from typing import Union

class HighPrecisionAlgorithms:
    add: Incomplete
    def __init__(self) -> None: ...
    class Addition:
        @staticmethod
        def int(a: str, b: str) -> str: ...
        def float(self, a: str, b: str) -> str: ...
        def __call__(self, a: str, b: str) -> str: ...
    class Subtraction:
        @staticmethod
        def int(a: str, b: str) -> str: ...
        def float(self, a: str, b: str) -> str: ...
        def __call__(self, a: Union[int, float], b: Union[int, float]) -> Union[int, float]: ...
